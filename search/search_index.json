{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"5N Infra","text":"<p>5N provides hosted node service where we can operate operator for you. Contact nodesupport@fivenorth.io for detail.</p>"},{"location":"#canton-network","title":"Canton Network","text":"<p>5N is a Supper Validator on Canton network and we can also help with your onboarding to Canton by sponsoring your node. Contact nodesupport@fivenorth.io for detail</p>"},{"location":"5n-dashboard/dar-management/","title":"DAR files management","text":"<p>From the Home or DARs page:</p> <ol> <li>Click Upload DAR files. </li> <li>Select one or multiple DAR files (To stage additional files, click the button again and select more files).</li> <li>Alternatively, drag and drop DAR files into the upload staging area.</li> <li>Files are automatically added to the staging area.</li> <li>(Optional) Enter a custom description for each DAR.</li> <li>Click Commit packages to send the staged DARs to participants for vetting.</li> </ol>"},{"location":"5n-dashboard/dar-management/#demo","title":"Demo","text":"Your browser does not support the video tag."},{"location":"5n-dashboard/install/","title":"Installation","text":"<p>To deploy the 5N Dashboard, you\u2019ll need to complete these steps:</p> <ul> <li>Configure an OIDC application for the 5N Dashboard UI.</li> <li>Install the software into your Kubernetes cluster using our public Helm chart.</li> <li>Expose the deployment via an ingress.</li> <li>(Upcoming) To enable database backups, provide your database address and S3 credentials.</li> </ul>"},{"location":"5n-dashboard/install/#setup","title":"Setup","text":"<p><code>5N Dashboard</code> is ideally deployed in the same cluster where your validator runs.</p>"},{"location":"5n-dashboard/install/#configure-an-oidc-application-for-the-5n-dashboard-ui","title":"Configure an OIDC application for the 5N Dashboard UI.","text":"<p>Follow the steps for setting up either an auth0 or an External OIDC Provider. Specifically, create a new application similar to the wallet/cns and call it <code>5N Dashboard UI</code>. Once this has been created, take note of your app URL, its client id and audience.</p> <p>Example, with Auth0, the value looks like this</p> <ul> <li>OIDC Authentication App URL: <code>https://&lt;tenand-id&gt;.&lt;region&gt;.auth0.com</code>.</li> <li>Client id: <code>&lt;some-id&gt;@clients</code></li> <li>Audience: the audience of your app</li> </ul> <p>You can usually reuse the same setup and URL configuration as your wallet UI app, but specify a different client ID or audience if needed.</p>"},{"location":"5n-dashboard/install/#install-the-software-into-your-kubernetes-cluster-using-our-public-helm-chart","title":"Install the software into your Kubernetes cluster using our public Helm chart.","text":"<p>Once you have the above values, deploy the latest version using Helm:</p> <pre><code>helm upgrade --install 5n-dashboard \\\n    oci://ghcr.io/fivenorth-io/helm/5n-dashboard \\\n    -n &lt;namespace&gt; \\\n    --version &lt;version&gt; \\\n    --set auth.url=&lt;auth-app-url&gt; --set auth.clientId=&lt;client-id&gt; --set auth.audience=&lt;audience&gt;\n</code></pre> <p>To find the latest version, visit the release note</p>"},{"location":"5n-dashboard/install/#expose-the-deployment-via-an-ingress","title":"Expose the deployment via an ingress.","text":"<p>The dashboard uses a single deployment for both UI and backend to simplify routing.</p> <p>Here\u2019s an example NGINX ingress:</p> <pre><code>apiVersion: networking.k8s.io/v1\nkind: Ingress\nmetadata:\n  name: dashboard-ingress\n  namespace: &lt;name-space&gt;\n  annotations:\n    nginx.ingress.kubernetes.io/proxy-body-size: \"128M\"\n    nginx.ingress.kubernetes.io/proxy-read-timeout: \"600\"\n    nginx.ingress.kubernetes.io/proxy-send-timeout: \"600\"\nspec:\n  tls:\n  - hosts:\n    - host-name-to-access-the-dashboard\n  - secretName: &lt;secret-name-for-cert-of-our-ingress&gt;\n  ingressClassName: nginx\n  rules:\n  - host: host-name\n    http:\n      paths:\n        - path: /\n          pathType: Prefix\n          backend:\n            service:\n              name: fivenorth-dashboard\n              port:\n                number: 8080\n</code></pre> <p>If your DAR files are small and you usually won't bundle with multi upload, you can adjust the annotations to a reasonable number to match your expectation.</p> <p>If your setup has TLS termination outside the cluster(such as at AWS/ALB load balancer, and the request just pass plaintext HTTP into the ingress service), your can simplify ingress to just</p> <pre><code>apiVersion: networking.k8s.io/v1\nkind: Ingress\nmetadata:\n  name: dashboard-ingress\n  namespace: &lt;name-space&gt;\n  annotations:\n    nginx.ingress.kubernetes.io/proxy-body-size: \"128M\"\n    nginx.ingress.kubernetes.io/proxy-read-timeout: \"600\"\n    nginx.ingress.kubernetes.io/proxy-send-timeout: \"600\"\nspec:\n  ingressClassName: nginx\n  rules:\n  - host: host-name\n    http:\n      paths:\n        - path: /\n          pathType: Prefix\n          backend:\n            service:\n              name: fivenorth-dashboard\n              port:\n                number: 8080\n</code></pre>"},{"location":"5n-dashboard/install/#access-the-dashboard","title":"Access the dashboard","text":"<p>Once deployed, log in using a user whose primary party matches your validator operator party. This is typically the same user you use to access your validator wallet.</p>"},{"location":"5n-dashboard/install/#upgrade-to-a-new-version","title":"Upgrade to a new version","text":"<p>To upgrade to a new version simply re-run the helm command with the right version</p> <pre><code>helm upgrade --install 5n-dashboard \\\n    oci://ghcr.io/fivenorth-io/helm/5n-dashboard \\\n    -n &lt;namespace&gt; \\\n    --version &lt;new-version&gt; \\\n    --set auth.url=&lt;auth-app-url&gt; --set auth.clientId=&lt;client-id&gt; --set auth.audience=&lt;audience&gt;\n</code></pre>"},{"location":"5n-dashboard/introduction/","title":"Overview","text":"<p>Welcome to the <code>5N Dashboard</code>, a high-performance and intuitive application designed to support Canton validator operations. The app simplifies the management of DAR files, users and parties on the validator. It is designed to be lean, simple, and fast, easily deployable as a single binary written in Golang, with a low memory footprint. This single binary includes both the backend and the frontend.</p> <p>Beyond DAR file management, the Dashboard provides comprehensive support for managing parties and users directly on your Canton validator. You can effortlessly onboard new participants, manage their permissions, and ensure a secure and efficient operational environment.</p> <p>One of the standout features is the interactive shell. It allows executing shell scripts directly within the Kubernetes cluster, with the output streamed in real-time to the browser. This capability provides unparalleled control and visibility, making debugging, deployment, and operational tasks significantly more efficient. All common credentials are auto\u2011populated and set as environment variables for convenience.</p> <p>The <code>5N Dashboard</code> is designed to be stateless. It can be deployed alongside an existing cluster, added to a fresh new system, or integrated with an already deployed standalone validator. It doesn\u2019t try to control or dictate how you deploy your Canton validator. As long as it can connect to the Ledger API and the Ledger Admin API, the <code>5N Dashboard</code> works as expected.</p> <p>The goal of the <code>5N Dashboard</code> is to give developers and administrators the tools needed to effectively deploy, monitor, maintain, and back up both the node and their Canton\u2011based applications.</p> <p>We welcome any feedback, email us at nodesupport@fivenorth.io</p>"},{"location":"5n-dashboard/introduction/#features","title":"Features","text":"<ul> <li>DAR file management with multi\u2011file uploads and version control.</li> <li>Manage users and parties.</li> <li>Interactive Shell Execution/History</li> <li>Backup identities dump</li> </ul>"},{"location":"5n-dashboard/introduction/#upcoming","title":"Upcoming","text":"<ul> <li>Auto\u2011backup node identities and databases to the cloud (supporting S3, GCS, Wasabi, and Cloudflare R2).</li> </ul>"},{"location":"5n-dashboard/introduction/#demo-videos","title":"Demo Videos","text":""},{"location":"5n-dashboard/introduction/#dars-management","title":"DARs management","text":"Your browser does not support the video tag."},{"location":"5n-dashboard/introduction/#users-management","title":"Users management","text":"Your browser does not support the video tag."},{"location":"5n-dashboard/introduction/#parties-management","title":"Parties management","text":"Your browser does not support the video tag."},{"location":"5n-dashboard/introduction/#shell-execution","title":"Shell execution","text":"Your browser does not support the video tag."},{"location":"5n-dashboard/introduction/#screenshots","title":"Screenshots","text":""},{"location":"5n-dashboard/introduction/#dar-files-management","title":"DAR files management","text":""},{"location":"5n-dashboard/introduction/#users-management_1","title":"Users Management","text":""},{"location":"5n-dashboard/introduction/#parties-management_1","title":"Parties Management","text":""},{"location":"5n-dashboard/introduction/#backup","title":"Backup","text":""},{"location":"5n-dashboard/introduction/#shell","title":"Shell","text":""},{"location":"5n-dashboard/party-management/","title":"Party Management","text":"<p>TBD</p>"},{"location":"5n-dashboard/release/","title":"Release Notes","text":""},{"location":"5n-dashboard/release/#v054","title":"v0.5.4","text":"<ul> <li>Fix bug running on Keycloak</li> <li>Fix bug support node operator party is different from the connected participant</li> <li>Helm chart</li> <li>Docker image</li> </ul>"},{"location":"5n-dashboard/release/#v051","title":"v0.5.1","text":"<ul> <li>Fix a bug on party listing page where load more button is broken.</li> <li>Helm chart</li> <li>Docker image</li> </ul>"},{"location":"5n-dashboard/release/#v050","title":"v0.5.0","text":"<ul> <li>Initial public release.</li> <li>Helm chart</li> <li>Docker image</li> </ul>"},{"location":"5n-dashboard/shell/","title":"Execute Shell Script","text":"<p>TBD</p>"},{"location":"5n-dashboard/user-management/","title":"User Management","text":"<p>The \"Users\" page allows you to list, search, create and delete user</p>"},{"location":"5n-dashboard/user-management/#creating-user","title":"Creating user","text":"<p>Click on \"Create User\" button on the top right and enter:</p> <ul> <li>User ID: this is mapped to the User ID on your OIDC system</li> <li>Primary Party: the party id of this user. Eg, if you want this user to be able to login to the wallet operator party, use that as primary party</li> <li>Rights: we support a few common canton right such as <code>can act as</code>, <code>cat read as</code>, <code>can read as any</code> and <code>participant admin</code></li> </ul>"},{"location":"5n-dashboard/user-management/#delete-user","title":"Delete user","text":"<p>Simply click on the trash icon to delete a user</p>"},{"location":"5n-dashboard/user-management/#deactive-user","title":"Deactive user","text":"<p>Edit the user and check the box \"Deactivate user\" then click Save</p>"},{"location":"5n-dashboard/user-management/#edit-rights","title":"Edit rights","text":"<p>Click on \"Edit rights\" and append or delete the existing right of the users, then click \"Save Changes\"</p>"},{"location":"hosted-node/hosted-node-access/","title":"Hosted Node Bundle","text":"<p>Five North Hosted Node Bundle is an archive containing a few things:</p> <ul> <li>VPN Profile</li> <li>Kube Config for DevNet, MainNet and TestNet if applicable</li> </ul> <p>You should have received a bundle shared securely through Bitwarden. Download and extract it. It typically contains 3 files</p> <ul> <li><code>&lt;your-company-name&gt;-&lt;your-name&gt;.conf</code>: this is your vpn profile</li> <li><code>devnet</code>: this is kubeconfig for devnet. You should store it somewhere. A good place is <code>~/.kube/your-company-name/devnet</code></li> <li><code>mainnet</code>: similar to above for mainnet. <code>~/.kube/your-company-name/mainnet</code></li> </ul> <p>Install Wireguard client for your machine and then import the VPN profile.</p>"},{"location":"hosted-node/hosted-node-access/#development-setup","title":"Development Setup","text":"<p>Ideally, you should get a development environment runnning locally in your docker compose. But sometimes it can be useful to connect to a devnet node. While we do not recommend doing so for MainNe, it can be valuable to develop interactively against an actual development node.</p>"},{"location":"hosted-node/hosted-node-access/#port-forward-to-ledger-grpc","title":"Port forward to ledger grpc","text":"<p>When you want to connect to the k8s cluster, activate your vpn. From the shell run the below command</p> <pre><code># replace to mainnet but please be super careful. Uploading wrong dar file risk brisk your validator. For mainnet best to drive it through your CI system.\n\nexport KUBECONFIG=~/.kube/your-company-name/devnet\n</code></pre> <p>Now you will be able to interact with kubernetes and can do port forward to participant as follow</p> <pre><code> kubectl -n validator1 port-forward $(kubectl -n validator1 get pod | grep participant |awk '{print $1}') 5002:5002\n</code></pre> <p>Now using <code>grpcurl</code> you can interact with the ledger grpc</p> <pre><code>grpcurl -plaintext localhost:5002 com.digitalasset.canton.admin.participant.v30.PackageService.ListDars\n</code></pre> <p>When you deploy your app to the cluster, you will just use <code>participant:5002</code> instead of <code>localhost:5002</code>. Inside the kube cluster, <code>participant:5002</code> routes to grpc ledger port.</p>"},{"location":"hosted-node/hosted-node-access/#log-viewing","title":"Log Viewing","text":"<p>You can install tools such as Stern to faciliate log viewing. For example, using Stern and after setting up your <code>KUBECONFIG</code> to point to the right file, you can stream all logs to your console.</p> <pre><code>stern participant -n validator1 --tail 0\n</code></pre>"},{"location":"sponsored-node/check-ip-allow-status/","title":"Assess IP Whitelisting status","text":"<p>To initialize your validator node, you need the following parameters that define the network you\u2019re onboarding to and the secret required for doing so.</p> <p>Quorum</p> <p>Please note: A quorum of 2/3 of Super Validators nodes is sufficient to proceed with deploying the stack. The total number of Super Validators may vary depending on the network.</p> Resources <p>DevNet: https://docs.dev.sync.global/validator_operator/validator_onboarding.html#onboarding-process-overview</p> <p>TestNet: https://docs.test.sync.global/validator_operator/validator_onboarding.html#onboarding-process-overview</p> <p>MainNet: https://docs.sync.global/validator_operator/validator_onboarding.html#onboarding-process-overview</p>"},{"location":"sponsored-node/check-ip-allow-status/#validating-that-your-ip-has-been-approved","title":"Validating that your IP has been approved","text":"<p>Egress IP</p> <p>Please note: The following commands must run from the same egress IP from which you want to deploy your validator, e.g. from the same server that will run the docker compose or Kubernetes stack.</p> DevNetTestNetMainNet Check whitelisting status in devnet<pre><code>for url in $(curl -sSL https://scan.sv-1.dev.global.canton.network.fivenorth.io/api/scan/v0/scans | jq -r '.scans | .[].scans | .[] | .publicUrl' ); do\n  echo -n \"$url: \";\n  curl -sSL --connect-timeout 5 --fail-with-body $url/api/scan/version | jq -r '.version';\ndone\n</code></pre> Check whitelisting status in TestNet<pre><code>for url in $(curl -sSL https://scan.sv-1.test.global.canton.network.fivenorth.io/api/scan/v0/scans | jq -r '.scans | .[].scans | .[] | .publicUrl' ); do\n  echo -n \"$url: \";\n  curl -sSL --connect-timeout 5 --fail-with-body $url/api/scan/version | jq -r '.version';\ndone\n</code></pre> Check whitelisting status in MainNet<pre><code>for url in $(curl -sSL https://scan.sv-1.global.canton.network.fivenorth.io/api/scan/v0/scans | jq -r '.scans | .[].scans | .[] | .publicUrl' ); do\n  echo -n \"$url: \";\n  curl -sSL --connect-timeout 5 --fail-with-body $url/api/scan/version | jq -r '.version';\ndone\n</code></pre>"},{"location":"sponsored-node/network-parameters/","title":"Required Network Parameters","text":"<p>To initialize your validator node, you need the following parameters that define the network you\u2019re onboarding to and the secret required for doing so.</p> Resources <p>DevNet: https://docs.dev.sync.global/validator_operator/validator_helm.html</p> <p>TestNet: https://docs.test.sync.global/validator_operator/validator_helm.html</p> <p>MainNet: https://docs.sync.global/validator_operator/validator_helm.html</p>"},{"location":"sponsored-node/network-parameters/#migration_id","title":"MIGRATION_ID","text":"<p>The current migration id of the network (dev/test/mainnet) you are trying to connect to. You can find this on https://sync.global/sv-network/.</p>"},{"location":"sponsored-node/network-parameters/#sponsor_sv_url","title":"SPONSOR_SV_URL","text":"<p>The following are Five North's Super Validator (SV) URLs, and they will only function if Five North is your designated sponsor.</p> DevNetTestNetMainNet <pre><code>https://sv.sv-1.dev.global.canton.network.fivenorth.io\n</code></pre> <pre><code>https://sv.sv-1.test.global.canton.network.fivenorth.io\n</code></pre> <pre><code>https://sv.sv-1.global.canton.network.fivenorth.io\n</code></pre>"},{"location":"sponsored-node/network-parameters/#trusted_scan_url","title":"TRUSTED_SCAN_URL","text":"<p>The scan URL of an SV that you trust and that is reachable by your validator, often your SV sponsor (Five North).</p> DevNetTestNetMainNet <pre><code>https://scan.sv-1.dev.global.canton.network.fivenorth.io\n</code></pre> <pre><code>https://scan.sv-1.test.global.canton.network.fivenorth.io\n</code></pre> <pre><code>https://scan.sv-1.global.canton.network.fivenorth.io\n</code></pre>"},{"location":"sponsored-node/network-parameters/#get-onboarding-secret","title":"Get Onboarding Secret","text":"<p>Egress IP</p> <p>Please note: The following commands must run from the same egress IP from which you want to deploy your validator, e.g. from the same server that will run the docker compose or Kubernetes stack.</p> DevNetTestNetMainNet Get Onboarding Secret from DevNet<pre><code>curl -X POST https://sv.sv-1.dev.global.canton.network.fivenorth.io/api/sv/v0/devnet/onboard/validator/prepare\n</code></pre> <p>Self-serve onboarding secrets are not available for TestNet. Please contact nodesupport@fivenorth.io to start the process</p> <p>Self-serve onboarding secrets are not available for MainNet. Please contact nodesupport@fivenorth.io to start the process</p>"}]}